import { useState, useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Modal from '../components/Modal'



export default function Home() {
  const [showAddModal, setShowAddModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false)
  const [vendorData, setVendorData] = useState({
    vendorName: '',
    bankName: '',
    bankAccNo: '',
    address: '',
    address2: '',
    city: '',
    country: '',
    zipcode: '',
  })
  const [editVendor, setEditVendor] = useState()
  const [allVendors, setAllVendors] = useState([])


  const handleInput = (e) => {
    e.preventDefault();
    const { name, value } = e.target;
    setVendorData((prev) => ({
      ...prev,
      [name]: value
    }))
  }

  const handleEditInput = (e) => {
    e.preventDefault();
    const { name, value } = e.target;
    setEditVendor((prev) => ({
      ...prev,
      [name]: value
    }))
  }




  const addVendor = async (data) => {

    setShowAddModal(false)

    await fetch('/api/vendor', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(data)
    })

    await getVendors()
    setVendorData({
      vendorName: '',
      bankName: '',
      bankAccNo: '',
      address: '',
      address2: '',
      city: '',
      country: '',
      zipcode: '',
    })

  }

  const deleteVendor = async (obj) => {
    await fetch('/api/vendor', {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(obj)

    })
    await getVendors()
  }

  const editVendorF = async (vendorID) => {
    setShowEditModal(false)

    await deleteVendor(vendorID);
    await addVendor(editVendor)

  }
  useEffect(() => {
    getVendors()
  }, [])

  function getVendors() {
    fetch('/api/vendor')
      .then((response) => response.json())
      .then((data) => setAllVendors(data.data))
  }
  return (
    <div className={styles.container}>


      <Head>
        <title>Vendor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <Modal
        onClose={() => setShowAddModal(false)}
        show={showAddModal}
      >
        <h1>Add Vendor</h1>
        <form onSubmit={(e) => {
          e.preventDefault();
          addVendor(vendorData)
        }} >
          <label htmlFor="">Vendor Name: </label>
          <input name='vendorName' onChange={handleInput} type="text" />
          <label htmlFor="">Bank Name: </label>
          <input onChange={handleInput} type="text" name='bankName' />
          <label htmlFor="">Bank Acc: </label>
          <input onChange={handleInput} type="text" name='bankAccNo' />
          <label htmlFor="">Address: </label>
          <input onChange={handleInput} type="text" name='address' />
          <label htmlFor="">Address2: </label>
          <input onChange={handleInput} type="text" name='address2' />
          <label htmlFor="">City: </label>
          <input onChange={handleInput} type="text" name='city' />
          <label htmlFor="">Country: </label>
          <input onChange={handleInput} type="text" name='country' />
          <label htmlFor="">Zip code: </label>
          <input onChange={handleInput} type="text" name='zipcode' />
          <button className='btn' >Add</button>
        </form>
      </Modal>

      <Modal
        onClose={() => setShowEditModal(false)}
        show={showEditModal}
      >
        <h1>Edit Vendor</h1>
        <form onSubmit={(e) => {
          e.preventDefault();
          editVendorF({ bankAccNo: editVendor.bankAccNo })
        }} >
          <label htmlFor="">Vendor Name: </label>
          <input name='vendorName' value={editVendor?.vendorName} onChange={handleEditInput} type="text" />
          <label htmlFor="">Bank Name: </label>
          <input value={editVendor?.bankName} onChange={handleEditInput} type="text" name='bankName' />
          <label htmlFor="">Bank Acc: </label>
          <input value={editVendor?.bankAccNo} onChange={handleEditInput} type="text" name='bankAccNo' />
          <label htmlFor="">Address: </label>
          <input value={editVendor?.address} onChange={handleEditInput} type="text" name='address' />
          <label htmlFor="">Address2: </label>
          <input value={editVendor?.address2} onChange={handleEditInput} type="text" name='address2' />
          <label htmlFor="">City: </label>
          <input value={editVendor?.city} onChange={handleEditInput} type="text" name='city' />
          <label htmlFor="">Country: </label>
          <input value={editVendor?.country} onChange={handleEditInput} type="text" name='country' />
          <label htmlFor="">Zip code: </label>
          <input value={editVendor?.zipcode} onChange={handleEditInput} type="text" name='zipcode' />
          <button className='btn' >Edit</button>
        </form>
      </Modal>

      <main className={styles.vendorContainer} >
        <div className={styles.createVendorContainer}>
          <h1>Vendors</h1>
          <button onClick={() => setShowAddModal(true)} className='btn'> Create Vendor </button>
        </div>
        <div className={styles.vendorInfoTable}>
          <table>
            <thead>
              <tr>
                <th>Vendor Name</th>
                <th>Bank Name</th>
                <th>Bank Acc</th>
                <th></th>
              </tr>
            </thead>
            <tbody>

              {
                allVendors.map((vendor, idx) => {
                  return (
                    <tr key={idx} >
                      <td>{vendor.vendorName}</td>
                      <td>{vendor.bankName}</td>
                      <td>{vendor.bankAccNo}</td>
                      <td className='table-icons' >
                        <Image
                          onClick={() => {
                            setShowEditModal(true)
                            console.log(vendor)
                            setEditVendor(vendor)
                          }}
                          src='/editing.png' alt='edit icon' height='20' width='20' />
                        <Image
                          onClick={() => { deleteVendor({ bankAccNo: vendor.bankAccNo }) }}
                          src='/delete.png' alt='delete icon' height='20' width='20' />
                      </td>
                    </tr>
                  )
                })
              }

            </tbody>
          </table>


        </div>
      </main>
    </div>
  )
}


// 2BS9gr7XbVxycw54